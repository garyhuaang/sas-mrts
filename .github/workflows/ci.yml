name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      # Disable NX Cloud
      - name: Disable NX Cloud
        run: npx nx reset

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci --legacy-peer-deps

      # Set environment variables to disable cloud for all steps
      - name: Set no-cloud environment
        run: |
          echo "NX_CLOUD_ACCESS_TOKEN=" >> $GITHUB_ENV
          echo "NX_CLOUD_AUTH_TOKEN=" >> $GITHUB_ENV
          echo "NX_NO_CLOUD=true" >> $GITHUB_ENV

      # Use manual command instead of the action
      - name: Set Git SHAs for affected commands
        run: |
          echo "BASE_SHA=$(git merge-base origin/main HEAD)" >> $GITHUB_ENV
          echo "HEAD_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Reset Nx Cache
        run: npx nx reset

      - name: Sync Nx Cache - Local
        run: npx nx sync --local

      - run: npx nx dep-graph --file=dist/graph.html --no-cloud

      - run: npx nx show projects --affected --base=${{ env.BASE_SHA }} --head=${{ env.HEAD_SHA }} --type=app --no-cloud

      - run: npx nx affected --base=${{ env.BASE_SHA }} --head=${{ env.HEAD_SHA }} --target=deploy --no-cloud

      - run: npm run build

      - name: Generate timestamp
        run: |
          echo "timestamp=$(date +%s)" >> $GITHUB_ENV

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact-${{ env.timestamp }}
          path: apps/store/dist

      - name: Upload Dependency Graph Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-graph-${{ env.timestamp }}
          path: dist/**/*
